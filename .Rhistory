#formats
par(mfrow=c(1,3))
#pin(c(2,2))
#d$French_Purchasing_Page<-factor(d$French_Purchasing_Page)
hist(d$Guess_the_Cost[d$French_Purchasing_Page == 1],main = "French format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "green")
d$Guess_the_Cost[d$German_Purchasing_Page == 1]
head(d)
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 1], main = "German format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0 ],main = "English format", xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "green")
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "blue")
d<-data.table(complete_dedup)
#back to factors
d$French_Purchasing_Page <- factor(d$French_Purchasing_Page)
d$German_Purchasing_Page <- factor(d$German_Purchasing_Page)
d$US_Origin <-factor(d$US_Origin)
d$Long_Description <-factor(d$Long_Description)
#summary(d$Guess_the_Cost)
#hist, includes all cleaned
hist(d$Guess_the_Cost,main="All conditions",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost), col = "blue")
abline(v = median(d$Guess_the_Cost), col = "green")
#formats
par(mfrow=c(1,3))
#pin(c(2,2))
#d$French_Purchasing_Page<-factor(d$French_Purchasing_Page)
hist(d$Guess_the_Cost[d$French_Purchasing_Page == 1],main = "French format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "green")
d$Guess_the_Cost[d$German_Purchasing_Page == 1]
#head(d)
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 1], main = "German format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0 ],main = "English format", xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "green")
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "blue")
d<-data.table(complete_dedup)
#back to factors
d$French_Purchasing_Page <- factor(d$French_Purchasing_Page)
d$German_Purchasing_Page <- factor(d$German_Purchasing_Page)
d$US_Origin <-factor(d$US_Origin)
d$Long_Description <-factor(d$Long_Description)
#summary(d$Guess_the_Cost)
#hist, includes all cleaned
hist(d$Guess_the_Cost,main="All conditions",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost), col = "blue")
abline(v = median(d$Guess_the_Cost), col = "green")
#formats
par(mfrow=c(1,3))
#pin(c(2,2))
#d$French_Purchasing_Page<-factor(d$French_Purchasing_Page)
hist(d$Guess_the_Cost[d$French_Purchasing_Page == 1],main = "French format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "green")
d$Guess_the_Cost[d$German_Purchasing_Page == 1]
#head(d)
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 1], main = "German format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0 ],main = "English format", xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "green")
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "blue")
d<-data.table(complete_dedup)
#back to factors
d$French_Purchasing_Page <- factor(d$French_Purchasing_Page)
d$German_Purchasing_Page <- factor(d$German_Purchasing_Page)
d$US_Origin <-factor(d$US_Origin)
d$Long_Description <-factor(d$Long_Description)
#hist, includes all cleaned
hist(d$Guess_the_Cost,main="All conditions",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost), col = "blue")
abline(v = median(d$Guess_the_Cost), col = "green")
#formats
par(mfrow=c(1,3))
#pin(c(2,2))
#d$French_Purchasing_Page<-factor(d$French_Purchasing_Page)
hist(d$Guess_the_Cost[d$French_Purchasing_Page == 1],main = "French format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "green")
d$Guess_the_Cost[d$German_Purchasing_Page == 1]
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 1], main = "German format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0 ],main = "English format", xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "green")
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "blue")
d<-data.table(complete_dedup)
#back to factors
d$French_Purchasing_Page <- factor(d$French_Purchasing_Page)
d$German_Purchasing_Page <- factor(d$German_Purchasing_Page)
d$US_Origin <-factor(d$US_Origin)
d$Long_Description <-factor(d$Long_Description)
#hist, includes all cleaned
hist(d$Guess_the_Cost,main="All conditions",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost), col = "blue")
abline(v = median(d$Guess_the_Cost), col = "green")
#formats
par(mfrow=c(1,3))
#pin(c(2,2))
#d$French_Purchasing_Page<-factor(d$French_Purchasing_Page)
hist(d$Guess_the_Cost[d$French_Purchasing_Page == 1],main = "French format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "green")
d$Guess_the_Cost[d$German_Purchasing_Page == 1]
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 1], main = "German format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0 ],main = "English format", xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "green")
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "blue")
d<-data.table(complete_dedup)
#back to factors
d$French_Purchasing_Page <- factor(d$French_Purchasing_Page)
d$German_Purchasing_Page <- factor(d$German_Purchasing_Page)
d$US_Origin <-factor(d$US_Origin)
d$Long_Description <-factor(d$Long_Description)
#hist, includes all cleaned
hist(d$Guess_the_Cost,main="All conditions",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost), col = "blue")
abline(v = median(d$Guess_the_Cost), col = "green")
#formats
par(mfrow=c(1,3))
#pin(c(2,2))
#d$French_Purchasing_Page<-factor(d$French_Purchasing_Page)
hist(d$Guess_the_Cost[d$French_Purchasing_Page == 1],main = "French format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "green")
d$Guess_the_Cost[d$German_Purchasing_Page == 1]
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 1], main = "German format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0 ],main = "English format", xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "green")
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "blue")
d<-data.table(complete_dedup)
#back to factors
d$French_Purchasing_Page <- factor(d$French_Purchasing_Page)
d$German_Purchasing_Page <- factor(d$German_Purchasing_Page)
d$US_Origin <-factor(d$US_Origin)
d$Long_Description <-factor(d$Long_Description)
#hist, includes all cleaned
hist(d$Guess_the_Cost,main="All conditions",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost), col = "blue")
abline(v = median(d$Guess_the_Cost), col = "green")
#formats
#par(mfrow=c(1,3))
#pin(c(2,2))
#d$French_Purchasing_Page<-factor(d$French_Purchasing_Page)
hist(d$Guess_the_Cost[d$French_Purchasing_Page == 1],main = "French format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "green")
d$Guess_the_Cost[d$German_Purchasing_Page == 1]
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 1], main = "German format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0 ],main = "English format", xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "green")
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "blue")
d<-data.table(complete_dedup)
#back to factors
d$French_Purchasing_Page <- factor(d$French_Purchasing_Page)
d$German_Purchasing_Page <- factor(d$German_Purchasing_Page)
d$US_Origin <-factor(d$US_Origin)
d$Long_Description <-factor(d$Long_Description)
#hist, includes all cleaned
hist(d$Guess_the_Cost,main="All conditions",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost), col = "blue")
abline(v = median(d$Guess_the_Cost), col = "green")
#formats
par(mfrow=c(1,3))
#pin(c(2,2))
#d$French_Purchasing_Page<-factor(d$French_Purchasing_Page)
hist(d$Guess_the_Cost[d$French_Purchasing_Page == 1],main = "French format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 1], main = "German format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0 ],main = "English format", xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "green")
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "blue")
#hist figures for origin, description, cleaned
par(mfrow=c(2,2))
#Origins
d_chart=d$Guess_the_Cost[d$US_Origin == 1]
hist(d_chart,main = "US Origin Wine",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d_chart), col = "blue")
abline(v = median(d_chart), col = "green")
d_chart=d$Guess_the_Cost[d$US_Origin == 0]
hist(d_chart,main = "French Origin Wine",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d_chart), col = "blue")
abline(v = median(d_chart), col = "green")
#descriptions
d_chart=d$Guess_the_Cost[d$Long_Description == 0]
hist(d_chart,main = "Short Description",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d_chart), col = "blue")
abline(v = median(d_chart), col = "green")
d_chart=d$Guess_the_Cost[d$Long_Description == 1]
hist(d_chart,main = "Long Description",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d_chart), col = "blue")
abline(v = median(d_chart), col = "green")
#Functions for later use
standard_conf_int_95 = function(regression, n){
r = coeftest(regression, vcovHC(regression))
upper_bound = r[n,1] + 1.96* r[n, 2]
lower_bound = r[n,1] -1.96* r[n, 2]
return (c(lower_bound,upper_bound))
}
#Process/clean variables- covariates
d<-data.table(d)
#English as primary language
d$English_as_primary<-d[,.(abs(d$English_as_primary-2))]
d = read.csv('1st_Launch_Full.csv')
# load packages
library(data.table)
library(dplyr)
library(tidyr)
library(foreign)
library(lmtest)
library(sandwich)
library(multiwayvcov)
library(stargazer)
library(ggplot2)
d = read.csv('1st_Launch_Full.csv')
# load packages
library(data.table)
library(dplyr)
library(tidyr)
library(foreign)
library(lmtest)
library(sandwich)
library(multiwayvcov)
library(stargazer)
library(ggplot2)
#Functions for later use
standard_conf_int_95 = function(regression, n){
r = coeftest(regression, vcovHC(regression))
upper_bound = r[n,1] + 1.96* r[n, 2]
lower_bound = r[n,1] -1.96* r[n, 2]
return (c(lower_bound,upper_bound))
}
#Process/clean variables- covariates
d<-data.table(d)
#English as primary language
d$English_as_primary<-d[,.(abs(d$English_as_primary-2))]
d$English_as_primary<-as.factor(d$English_as_primary)
#Male: original, male=1, female=2
d$Male<-d[,.(abs(d$Male-2))]
d$Male<-as.factor(d$Male)
#household income- as factor due to <20k, >100k, and do not answer
d$Household_Income<-as.factor(d$Household_Income)
#Other languages- Blank is only English, French 1, German 2, Other 3
d$Speaks_German<-as.numeric(d[,Other_Language_Spoken %like% "2"])
d$Speaks_French<-as.numeric(d[,Other_Language_Spoken %like% "1"])
#Drink Frequency- options are not linear
d$Drink_Frequency<-factor(d$Drink_Frequency)
#Cab preference
d$Cab_Preference<-d[,.(abs(d$Cab_Preference-2))]
#Purchase Frequency- also not linear
d$Purchase_Frequency<-factor(d$Purchase_Frequency)
d_factor<-d
#survey question datalabels. This does not work perfectly....
#to be used in demographic barplots, with name.arg()
English_as_primary<-c("No","Yes")
Male<-c("Female","Male")
Household_Income<-c("<$20,000","$20,000 to $34,999","$35,000 to $49,999",
"$50,000 to $74,999","$75,000 to $99,999",">$100,000","Prefer not to answer")
Speaks_German<-c("No","Yes")
Speaks_French<-c("No","Yes")
Drink_Frequency<-c(">Weekly","Weekly","Monthly","Seldom","Never")
Cab_Preference<-c("No","Yes")
Purchase_Frequency<-c(">Weekly","Weekly","Monthly","Seldom","Never")
demographics_labels<-list(English_as_primary,Male,Household_Income,Speaks_German,Speaks_French,Drink_Frequency,Cab_Preference,Purchase_Frequency)
demographics<-list(d$English_as_primary,d$Male,d$Household_Income,d$Speaks_German,d$Speaks_French,d$Drink_Frequency,d$Cab_Preference,d$Purchase_Frequency)
#demographics_labels[1]
d<-data.table(d)
demographics=data.table(d[,.(English_as_primary,Male,Household_Income,Speaks_German,Speaks_French,Drink_Frequency,Cab_Preference,Purchase_Frequency)])
stargazer(d[,.(Guess_the_Cost,Purchase_50,Purchase_35,Purchase_20)],type="text",title = "Output variables, Pre-Cleaning")
hist(d$Guess_the_Cost[d$Guess_the_Cost],main="Guess the cost, Pre-Cleaning",breaks=100,xlab= "Guessed cost")
par(mfrow=c(3,3))
#look at randomization/tracks
barplot(prop.table(table(d$Track)),main="Distribution across Tracks, Normalized",names.arg = c(-1:12))
#Important to note- 0 on barchart is N/A or attrition.
for (i in (1:length(names(demographics)))){
#print(summary(demographics[,..i]))
barplot(table(demographics[,..i]),
main=names(demographics)[i]
#,names.arg = demographics_labels[i]
)}
# Cleaning out incomplete responses before treament exposures
d <- d[!is.na(d$Track),]
#summary(d)
# Counting occurances of IP address and Geo-codes
d$geo_code <- paste(d$LocationLatitude, d$LocationLongitude)
dt = data.table(d)
dt[, `freq_geo` := .N, by = geo_code]
dt[, `freq_ip` := .N, by = IPAddress]
#class(as.data.frame(dt))
#dt
## Creatig dedupped dataset where we do not allow any duplicates in IP or Geo code
complete_dedup<- dt[dt$freq_ip==1 & (dt$freq_geo == 1 | (dt$geo_code == 'NA NA' & Track!= ''))]
d<-complete_dedup
d<-data.table(d)
demographics=data.table(d[,.(English_as_primary,Male,Household_Income,Speaks_German,Speaks_French,Drink_Frequency,Cab_Preference,Purchase_Frequency)])
stargazer(d[,.(Guess_the_Cost,Purchase_50,Purchase_35,Purchase_20)],type="text",title = "Output variables, Pre-Cleaning")
hist(d$Guess_the_Cost[d$Guess_the_Cost],main="Guess the cost, Post-Cleaning",breaks=100,xlab= "Guessed cost")
par(mfrow=c(3,3))
#look at randomization/tracks
barplot(prop.table(table(d$Track)),main="Distribution across Tracks, Normalized",names.arg = c(-1:12))
#Important to note- 0 on barchart is N/A or attrition.
for (i in (1:length(names(demographics)))){
#print(summary(demographics[,..i]))
barplot(table(demographics[,..i]),
main=names(demographics)[i]
#,names.arg = demographics_labels[i]
)}
d<-data.table(complete_dedup)
#back to factors
d$French_Purchasing_Page <- factor(d$French_Purchasing_Page)
d$German_Purchasing_Page <- factor(d$German_Purchasing_Page)
d$US_Origin <-factor(d$US_Origin)
d$Long_Description <-factor(d$Long_Description)
#hist, includes all cleaned
hist(d$Guess_the_Cost,main="All conditions",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost), col = "blue")
abline(v = median(d$Guess_the_Cost), col = "green")
#formats
par(mfrow=c(1,3))
#pin(c(2,2))
#d$French_Purchasing_Page<-factor(d$French_Purchasing_Page)
hist(d$Guess_the_Cost[d$French_Purchasing_Page == 1],main = "French format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$French_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 1], main = "German format",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "blue")
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 1]), col = "green")
hist(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0 ],main = "English format", xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = median(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "green")
abline(v = mean(d$Guess_the_Cost[d$German_Purchasing_Page == 0 & d$French_Purchasing_Page == 0]), col = "blue")
#hist figures for origin, description, cleaned
par(mfrow=c(2,2))
#Origins
d_chart=d$Guess_the_Cost[d$US_Origin == 1]
hist(d_chart,main = "US Origin Wine",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d_chart), col = "blue")
abline(v = median(d_chart), col = "green")
d_chart=d$Guess_the_Cost[d$US_Origin == 0]
hist(d_chart,main = "French Origin Wine",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d_chart), col = "blue")
abline(v = median(d_chart), col = "green")
#descriptions
d_chart=d$Guess_the_Cost[d$Long_Description == 0]
hist(d_chart,main = "Short Description",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d_chart), col = "blue")
abline(v = median(d_chart), col = "green")
d_chart=d$Guess_the_Cost[d$Long_Description == 1]
hist(d_chart,main = "Long Description",xlab= "Guessed cost", xlim = c(0,100),breaks=1000)
abline(v = mean(d_chart), col = "blue")
abline(v = median(d_chart), col = "green")
#d$Cab_Preference = factor(d$Cab_Preference)
#d$French_Purchasing_Page = factor(d$French_Purchasing_Page)
d$French_Purchasing_Page = as.numeric(d$French_Purchasing_Page)
d$German_Purchasing_Page = as.numeric(d$German_Purchasing_Page)
d$US_Origin = as.numeric(d$US_Origin)
d$Long_Description = as.numeric(d$Long_Description)
French_cb = lm(French_Purchasing_Page ~ Male + Household_Income + English_as_primary + Drink_Frequency + Cab_Preference + Purchase_Frequency, data = d[d$German_Purchasing_Page != 1,])
German_cb = lm(German_Purchasing_Page ~ Male + Household_Income + English_as_primary + Drink_Frequency + Cab_Preference + Purchase_Frequency, data = d[d$French_Purchasing_Page != 1,])
Origin_cb = lm(US_Origin ~ Male + Household_Income + English_as_primary + Drink_Frequency + Cab_Preference + Purchase_Frequency, data = d)
Description_cb = lm(Long_Description ~ Male + Household_Income + English_as_primary + Drink_Frequency + Cab_Preference + Purchase_Frequency, data = d)
stargazer(French_cb,German_cb,Origin_cb,Description_cb,align=TRUE,type="text")
d<-data.table(complete_dedup)
OR = function(regr){
return(exp(coef(regr)))
}
attrit = subset(d, Finished == 0)
sum(attrit$French_Purchasing_Page == 1)
sum(attrit$German_Purchasing_Page == 1)
sum(attrit$French_Purchasing_Page == 0 & attrit$German_Purchasing_Page == 0)
lm_attrit_format = lm(Finished~French_Purchasing_Page + German_Purchasing_Page, d)
lm_attrit_origin = lm(Finished~ US_Origin, d)
lm_attrit_descrip = lm(Finished~Long_Description, d)
## Logistic regression
LR_format <- glm (Finished ~ French_Purchasing_Page + German_Purchasing_Page, data=d, family = binomial)
LR_origin <- glm (Finished ~ US_Origin , data=d, family = binomial)
LR_descrip <- glm (Finished ~ Long_Description, data=d, family = binomial)
stargazer(lm_attrit_format,lm_attrit_origin,lm_attrit_descrip, title="Attrition Regressions-OLS", align=TRUE, type="text")
stargazer(LR_format, LR_origin, LR_descrip, type="text", coef = list(OR(LR_format), OR(LR_origin), OR(LR_descrip)), title="Attrition Regressions-Logistic with Odds Ratio", p.auto = FALSE, align=TRUE)
DT<-data.table(d)
#for RI, only using the bottom 95percent
boxplot(DT$Guess_the_Cost,horizontal = TRUE)
title("Boxplot for Guesses including upper outliers")
DT_95<-DT[Guess_the_Cost < quantile(DT$Guess_the_Cost,.95)]
DT<-data.table(na.omit(d))
#for RI, only using the bottom 95percent
boxplot(DT$Guess_the_Cost,horizontal = TRUE)
DT<-data.table(d)
#for RI, only using the bottom 95percent
boxplot(DT$Guess_the_Cost,horizontal = TRUE)
title("Boxplot for Guesses including upper outliers")
DT_95<-DT[Guess_the_Cost < quantile(DT$Guess_the_Cost,.95)]
#Convert data to omit na's (attrition)
d<- d_factor[!is.na(d_factor$Track),]
# Counting occurances of IP address and Geo-codes
d$geo_code <- paste(d$LocationLatitude, d$LocationLongitude)
dt = data.table(d)
dt[, `freq_geo` := .N, by = geo_code]
dt[, `freq_ip` := .N, by = IPAddress]
d_factor<- dt[dt$freq_ip==1 & dt$freq_geo==1]
d<- d_factor[d_factor$freq_ip==1 & d_factor$freq_geo==1]
DT<-data.table(d)
#for RI, only using the bottom 95percent
boxplot(DT$Guess_the_Cost,horizontal = TRUE)
title("Boxplot for Guesses including upper outliers")
DT_95<-DT[Guess_the_Cost < quantile(DT$Guess_the_Cost,.95)]
boxplot(DT_95$Guess_the_Cost,horizontal = TRUE)
title("Boxplot for Guesses, bottom 95 percent")
#Set up RI for 0-95 of guesses
set.seed(0)
#2. calculate ate function
calculate_ate<- function(d=RI_DT,outcome,feature){
control<-outcome[feature==0]
treatment<-outcome[feature==1]
ate<-mean(treatment)-mean(control)
return(ate)
}
#3. Assume sharp null
#make new table with randomized features (input)
random_it<-function(d,outcome,feature){
d_new<-data.frame(X=sample(feature),Y=outcome)
ate<-calculate_ate(d_new,d_new$Y,d_new$X)
return(ate)
}
#random_it(RI_DT,RI_outcome,RI_feature)
#4. rinse and repeat
rep_rand_Sharpnull<-function(d,NITERS,outcome,feature){
ate_list<-rep(NA, NITERS)
for (i in (1:NITERS)){
ate_list[i]<- random_it(d,outcome,feature)
}
return(ate_list)
}
RI_chartoutput<-function(DT=RI_DT, outcome=RI_outcome, RI_feature,feature_title){
ate_obsv<-calculate_ate(DT,outcome,RI_feature)
ate_list<-rep_rand_Sharpnull(d,NITERS=1000,outcome,RI_feature)
p_value<-mean(ate_obsv<=ate_list)
hist(ate_list,main = sprintf("Histogram under Sharp Null \n %s: P-value %f",feature_title,p_value))
abline(v = ate_obsv, col = "blue")
}
#Formats
par(mfrow=c(2,1))
RI_chartoutput(DT_95,DT_95$Guess_the_Cost,DT_95$French_Purchasing_Page,"French Purchasing Page")
RI_chartoutput(DT_95,DT_95$Guess_the_Cost,DT_95$German_Purchasing_Page,"German Purchasing Page")
#Wine origin, Description
par(mfrow=c(2,1))
RI_chartoutput(DT_95,DT_95$Guess_the_Cost,DT_95$US_Origin,"US Origin (vs French)")
RI_chartoutput(DT_95,DT_95$Guess_the_Cost,DT_95$Long_Description,"Long Description")
#Set up RI for 0-95 of guesses
set.seed(0)
#2. calculate ate function
calculate_ate<- function(d=RI_DT,outcome,feature){
control<-outcome[feature==0]
treatment<-outcome[feature==1]
ate<-mean(treatment)-mean(control)
return(ate)
}
#3. Assume sharp null
#make new table with randomized features (input)
random_it<-function(d,outcome,feature){
d_new<-data.frame(X=sample(feature),Y=outcome)
ate<-calculate_ate(d_new,d_new$Y,d_new$X)
return(ate)
}
#random_it(RI_DT,RI_outcome,RI_feature)
#4. rinse and repeat
rep_rand_Sharpnull<-function(d,NITERS,outcome,feature){
ate_list<-rep(NA, NITERS)
for (i in (1:NITERS)){
ate_list[i]<- random_it(d,outcome,feature)
}
return(ate_list)
}
RI_chartoutput<-function(DT=RI_DT, outcome=RI_outcome, RI_feature,feature_title){
ate_obsv<-calculate_ate(DT,outcome,RI_feature)
ate_list<-rep_rand_Sharpnull(d,NITERS=1000,outcome,RI_feature)
p_value<-mean(ate_obsv<=ate_list)
hist(ate_list,main = sprintf("Histogram under Sharp Null \n %s: P-value %f",feature_title,p_value))
abline(v = ate_obsv, col = "blue")
}
#Formats
par(mfrow=c(2,1))
RI_chartoutput(DT_95,DT_95$Guess_the_Cost,DT_95$French_Purchasing_Page,"French Purchasing Page")
RI_chartoutput(DT_95,DT_95$Guess_the_Cost,DT_95$German_Purchasing_Page,"German Purchasing Page")
#Wine origin, Description
par(mfrow=c(2,1))
RI_chartoutput(DT_95,DT_95$Guess_the_Cost,DT_95$US_Origin,"US Origin (vs French)")
RI_chartoutput(DT_95,DT_95$Guess_the_Cost,DT_95$Long_Description,"Long Description")
#basic and covariate models
lm.basic_format<-lm(Guess_the_Cost~French_Purchasing_Page+German_Purchasing_Page,d)
lm.basic_origin<-lm(Guess_the_Cost~US_Origin,d)
lm.basic_description<-lm(Guess_the_Cost~Long_Description,d)
lm.cv_format<-lm(Guess_the_Cost~French_Purchasing_Page + German_Purchasing_Page + Male + Household_Income + English_as_primary  + Drink_Frequency + Cab_Preference + Purchase_Frequency,DT)
lm.cv_origin<-lm(Guess_the_Cost~US_Origin + Male + Household_Income + English_as_primary  + Drink_Frequency + Cab_Preference + Purchase_Frequency,DT)
lm.cv_description<-lm(Guess_the_Cost~Long_Description + Male + Household_Income + English_as_primary  + Drink_Frequency + Cab_Preference + Purchase_Frequency,DT)
lm.basic_all<-lm(Guess_the_Cost ~ French_Purchasing_Page+German_Purchasing_Page+US_Origin+Long_Description,d)
lm.cv_all<-lm(Guess_the_Cost~French_Purchasing_Page+German_Purchasing_Page+US_Origin+Long_Description + Male + Household_Income + English_as_primary  + Drink_Frequency + Cab_Preference + Purchase_Frequency,DT)
stargazer(lm.basic_format,lm.basic_origin,lm.basic_description,lm.basic_all,align=TRUE,type="text")
stargazer(lm.cv_format,lm.cv_origin,lm.cv_description,lm.cv_all,align=TRUE,type="text")
